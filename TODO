✔ Crear una clase Persona, una clase PYME y una clase Multinacional. Las 3 clases deben heredar de la clase Cliente. @started(19-12-19 14:52) @done(19-12-19 14:52) @lasted(35s)
✔ Mover los atributos y métodos correspondientes (que sólo correspondan a personas físicas), de la clase Cliente a la clase Persona. @started(19-12-19 14:52) @done(19-12-19 14:52) @lasted(41s)
✔ Agregar a las clases PYME y Multinacional los atributos y métodos que correspondan. (ej: CUIT, Razón social, etc). Agregar constructor y métodos getters y setters. @started(19-12-19 14:53) @done(19-12-19 14:54) @lasted(1m50s)
✔ Realizar los cambios necesarios de modo tal que la clase cliente pase a ser una clase abstracta. @started(19-12-19 14:54) @done(19-12-19 14:55) @lasted(1m23s)
✔ Crear una clase abstracta Cuenta con atributos: CBU, Balance, Fecha de último movimiento. Agregar setters y getters para obtener los datos de la cuenta. Agregar un constructor que permite inicializar el CBU. @started(19-12-19 14:55) @done(19-12-19 14:57) @lasted(2m23s)
✔ Agregar un método abstracto para debitar cierto monto que reciba como parámetro el monto y desde donde se está haciendo la transacción (cajero Banelco, cajero Link, caja). Agregar otro método (no abstracto) que permita acreditar cierto monto (y programar su comportamiento). (Tener en cuenta que cada método debe, además, modificar la fecha de último movimiento). @started(19-12-19 14:58) @done(19-12-19 15:00) @lasted(2m21s)
✔ Crear 4 clases llamadas Classic, Gold, Platinum y Black. Todas “hijas” de la clase Cuenta. @started(19-12-19 15:02) @done(19-12-19 15:03) @lasted(1m58s)
✔ Implementar los métodos debitar y acreditar en cada clase, con las siguientes reglas de negocio @started(19-12-19 14:53) @done(19-12-19 15:06) @lasted(13m45s)
Debitar:
✔ Classic: Si la transacción es desde un cajero Banelco, debe debitar un 5% mas. De Link un 10% mas. Desde caja no se agrega importe extra. @started(19-12-20 11:29) @done(19-12-20 11:31) @lasted(2m33s)
✔ Gold: Desde Banelco y Caja no se agrega importe extra. Desde Link un 5% mas. @started(19-12-20 11:31) @done(19-12-20 11:32) @lasted(1m49s)
✔ Platinum: 5% desde cualquier medio, a menos que la cuenta tenga un balance de 5.000 o más. @done(19-12-20 11:34)
✔ Black: No se cobra importe extra. @started(19-12-20 11:34) @done(19-12-20 11:34) @lasted(27s)
Acreditar:
✔ Utiliza la cuenta que realiza su padre, pero debe modificar el importe a acreditar según el tipo de cuenta. @started(19-12-20 11:40) @done(19-12-20 11:40) @lasted(14s)
✔ El banco se queda con un 5% si es Classic. @started(19-12-20 11:40) @done(19-12-20 11:40) @lasted(15s)
✔ Se queda con un 3% si es Gold, salvo que se esté acreditando 25.000 o más. @started(19-12-20 11:40) @done(19-12-20 11:42) @lasted(2m45s)
✔ Si es Platinum el banco no retiene nada. @done(19-12-20 11:42)
✔ 0% para Black o 4% para montos superiores a 1.000.000. @done(19-12-20 11:44)
✔ Hacer los cambios necesarios en el Cliente, para que pueda tener una cuenta asociada. (Concepto de composición). Agregar la asignación de la cuenta en el constructor. @started(19-12-20 11:47) @done(19-12-20 11:51) @lasted(4m10s)
✔ Una vez por mes, el banco debe cobrarle a cada cliente por los servicios prestados. Cada Cliente deberá tener un método que permita cobrar los servicios @started(19-12-20 14:40) @done(19-12-20 14:44) @lasted(4m53s)
✔ Si el cliente tiene cuenta Classic, el banco cobra un monto fijo de $100. @started(19-12-20 14:44) @done(19-12-20 14:45) @lasted(1m27s)
✔ Si el cliente tiene cuenta Gold, el banco cobra $10 por cada letra del apellido del cliente o $5 por cada letra de la razón social. @done(19-12-20 14:50)
✔ Si el cliente tiene una cuenta Platinum el banco cobra un 10% del total del balance de la cuenta. @started(19-12-20 14:51) @done(19-12-20 14:55) @lasted(4m13s)
✔ Si el cliente tiene una cuenta Black, el banco cobra $500, más $100 multiplicado por el número de día de la semana en la que se hizo la última transacción. @done(19-12-20 14:57)
$date = '2016/09/28';
$weekday = date('l', strtotime($date));
✔ Generar una interfaz “Liquidable” que declare un método liquidarHaberes. Tanto PYME como Multinacional deben implementar “Liquidable”. El método liquidarHaberes recibe una Persona y un monto en donde se le paga a la Persona dicho monto de la cuenta de la empresa. @started(19-12-20 14:58) @done(19-12-20 15:02) @lasted(4m16s)
✔ Dentro de PYME este método cobra un 1% de cada liquidación que desaparecen de la cuenta de la PYME. @started(19-12-20 15:02) @done(19-12-20 15:05) @lasted(3m43s)
✔ Dentro de Multinacional este método cobra un valor fijo de $500 que desaparecen de la cuenta de la Multinacional. @started(19-12-20 15:05) @done(19-12-20 15:06) @lasted(1m16s)
✔ Crear una interfaz “Imprimible” que declare un método mostrar. Este método deberá retornar lo que corresponda, según la clase que lo implemente @started(19-12-20 15:16) @done(19-12-20 15:16) @lasted(27s)
✔ Para Persona, el nombre y apellido. @started(19-12-20 15:17) @done(19-12-20 15:17) @lasted(40s)
✔ Para PYME, la razón social @started(19-12-20 15:17) @done(19-12-20 15:18) @lasted(1m27s)
✔ Para Multinacional, la razón social. @started(19-12-20 15:18) @done(19-12-20 15:18) @lasted(53s)
✔ Para las cuentas, el balance. @started(19-12-20 15:19) @done(19-12-20 15:19) @lasted(41s)
☐ Crear un archivo “banco.php”, que instancie un Banco y lo llene con Clientes (que ya deben tener cuentas a la hora de ser creados). Luego de eso, realizar las operaciones disponibles como prueba, imprimiendo para cada una sobre qué Cliente se hizo y como queda el balance de su Cuenta luego de la operación @started(19-12-20 15:19)
